'use strict';var itertools={};var re={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,
__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,
divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_itertools__ from"./itertools.js";__nest__(itertools,"",__module_itertools__);import*as __module_re__ from"./re.js";__nest__(re,"",__module_re__);var __name__="__main__";export var my_reduce=function(func,
iterable,start){if(typeof start=="undefined"||start!=null&&start.hasOwnProperty("__kwargtrans__"))var start=null;var it=py_iter(iterable);if(start===null)try{var start=py_next(it)}catch(__except0__){if(isinstance(__except0__,StopIteration)){var __except1__=py_TypeError("reduce() of empty sequence with no initial value");__except1__.__cause__=null;throw __except1__;}else throw __except0__;}var accum_value=start;for(var x of iterable)var accum_value=func(accum_value,x);return accum_value};export var nonempty_union=
function(x,y){try{var z=frozenset(x)|frozenset(y)}catch(__except0__){var z=x+y}return len(z)>1?list(filter(null,z)):list(z)};export var vocabulary=function(string){try{var string=string.py_replace(" ","");var components=function(){var __accu0__=[];for(var s of string.py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();return list(filter(null,my_reduce(function __lambda__(x,y){return list(frozenset(x)|frozenset(y))},components)))}catch(__except0__){if(isinstance(__except0__,AttributeError))return list(filter(null,
my_reduce(function __lambda__(x,y){return list(frozenset(x)|frozenset(y))},string)));else throw __except0__;}};export var reduct=function(string,new_vocab){var components=function(){var __accu0__=[];for(var s of string.py_replace(" ","").py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();var reducted=function(){var __accu0__=[];for(var c of components)__accu0__.append(function(){var __accu1__=[];for(var f of c)if(__in__(f,new_vocab))__accu1__.append(f);return __accu1__}());return __accu0__}();
return"|".join(function(){var __accu0__=[];for(var c of reducted)__accu0__.append(",".join(c));return __accu0__}())};export var block_compress=function(string){var components=function(){var __accu0__=[];for(var s of string.py_replace(" ","").py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();if(len(components)<2)return"|".join(function(){var __accu0__=[];for(var c of components)__accu0__.append(",".join(c));return __accu0__}());else if(sorted(components[0])==sorted(components[1]))return block_compress("|".join(function(){var __accu0__=
[];for(var c of components.__getslice__(1,null,1))__accu0__.append(",".join(c));return __accu0__}()));else return",".join(components[0])+"|"+block_compress("|".join(function(){var __accu0__=[];for(var c of components.__getslice__(1,null,1))__accu0__.append(",".join(c));return __accu0__}()))};export var delete_empty_boxes=function(string){var components=function(){var __accu0__=[];for(var s of string.py_replace(" ","").py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();return"|".join(function(){var __accu0__=
[];for(var c of components)if(!__in__(c,[[],[""]]))__accu0__.append(",".join(c));return __accu0__}())};export var superpose=function(string_a,string_b,vocab_a,vocab_b){if(typeof vocab_a=="undefined"||vocab_a!=null&&vocab_a.hasOwnProperty("__kwargtrans__"))var vocab_a=null;if(typeof vocab_b=="undefined"||vocab_b!=null&&vocab_b.hasOwnProperty("__kwargtrans__"))var vocab_b=null;if(vocab_a===null&&vocab_b===null){var string_a=string_a.py_replace(" ","");var string_b=string_b.py_replace(" ","");var components_b=
function(){var __accu0__=[];for(var s of string_b.py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();var components_a=function(){var __accu0__=[];for(var s of string_a.py_split("|"))__accu0__.append(s.py_split(","));return __accu0__}();var vocab_a=list(filter(null,my_reduce(function __lambda__(x,y){return list(frozenset(x)|frozenset(y))},components_a)));var vocab_b=list(filter(null,my_reduce(function __lambda__(x,y){return list(frozenset(x)|frozenset(y))},components_b)));var splist=
function(){var __accu0__=[];for(var string_r of superpose(components_a,components_b,vocab_a,vocab_b))__accu0__.append("|".join(function(){var __accu1__=[];for(var s of string_r)__accu1__.append(",".join(s));return __accu1__}()));return __accu0__}();return splist}if(!string_a&&!string_b)return[[]];if(!string_a||!string_b)return[];if((frozenset(vocab_a)&frozenset(string_b[0]))<=frozenset(string_a[0])&&(frozenset(vocab_b)&frozenset(string_a[0]))<=frozenset(string_b[0])){var head_union=nonempty_union(string_a[0],
string_b[0]);var l=L(string_a[0],string_a.__getslice__(1,null,1),vocab_a,string_b[0],string_b.__getslice__(1,null,1),vocab_b);return function(){var __accu0__=[];for(var l_item of l)__accu0__.append([head_union]+l_item);return __accu0__}()}return[]};export var L=function(head_a,tail_a,vocab_a,head_b,tail_b,vocab_b){var part_1=superpose([head_a]+tail_a,tail_b,vocab_a,vocab_b);var part_2=superpose(tail_a,[head_b]+tail_b,vocab_a,vocab_b);var part_3=superpose(tail_a,tail_b,vocab_a,vocab_b);return nonempty_union(nonempty_union(part_1,
part_2),part_3)};export var superpose_all=function*(list_of_strings){if(py_typeof(list_of_strings)!=list){var __except0__=py_TypeError;__except0__.__cause__=null;throw __except0__;}else if(len(list_of_strings)==0){var __except0__=Exception("Cannot use empty list");__except0__.__cause__=null;throw __except0__;}else if(len(list_of_strings)==1)yield list_of_strings[0];else for(var sp of superpose(list_of_strings[0],list_of_strings[1]))yield*superpose_all([sp]+list_of_strings.__getslice__(2,null,1))};
export var zipl=itertools.zip_longest;export var pw_sp=function(string_a,string_b,vocab_a,vocab_b){if(typeof vocab_a=="undefined"||vocab_a!=null&&vocab_a.hasOwnProperty("__kwargtrans__"))var vocab_a=null;if(typeof vocab_b=="undefined"||vocab_b!=null&&vocab_b.hasOwnProperty("__kwargtrans__"))var vocab_b=null;var components_a=string_a.py_replace(" ","").py_split("|");var components_b=string_b.py_replace(" ","").py_split("|");var res=[];for(var [i,c]of enumerate(components_a.__getslice__(1,-1,1)))for(var f of c.py_split(","))for(var [j,
d]of enumerate(components_b.__getslice__(1,-1,1)))if(__in__(f,d.py_split(",")))if(len(res)==0||res[-1][1]-res[-1][0]==j-i)res.append(tuple([i+1,j+1]));else return[];if(len(res)==0)return[];else var diff=res[0][1]-res[0][0];var pad_a=components_a;var pad_b=components_b;if(diff>0)for(var i=0;i<diff;i++){var pad_a=[""]+pad_a;var pad_b=pad_b+[""]}else if(diff<0)for(var i=0;i<-diff;i++){var pad_a=pad_a+[""];var pad_b=[""]+pad_b}else;return[re.sub("\\|+","|","|".join(function(){var __accu0__=[];for(var [x,
y]of zipl(pad_a,pad_b,__kwargtrans__({fillvalue:""})))__accu0__.append(",".join(sorted(nonempty_union(x.py_split(","),y.py_split(",")))));return __accu0__}()))]};

//# sourceMappingURL=sfg.map